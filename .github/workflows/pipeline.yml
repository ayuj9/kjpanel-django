name: django-pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DB_URL: postgres://username:password@localhost/dbname

    services:
      postgres:
        image: postgres:16
      # env :

    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - name: checkout actions
        uses: actions/checkout@v4

      - uses: actions/setup-python@v3
        with:
          python-version: ${{matrix.python-version}}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --verbose


      - name : Setup django env
        env : 
          DB_URL : ${{vars.DB_URL}}
        run :
          python manage.py makemigrations
          python manage.py migrate
          python manage.py collectstatic --noinput  

      - name: Run Django tests
        env:
          DATABASE_URL: ${{ vars.DATABASE_URL }}
        run: |
          python manage.py test --noinput --failfast
      
             

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
              test-result.xml