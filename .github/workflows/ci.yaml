name: django-pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      DB_URL: ${{ secrets.DB_URL }}
      # DB_NAME: mydatabase
      # DB_USER: myuser
      # DB_PASSWORD: mypassword
      # DB_HOST: localhost
      # DB_PORT: 5430

    # services:
    #   postgres:
    #     image: postgres:16
    #     ports:
    #       - 5430:5432
    #     env:
    #       POSTGRES_DB: ${{ env.DB_NAME }}
    #       POSTGRES_USER: ${{ env.DB_USER }}
    #       POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}

    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - name: Checkout repository manually
        uses: actions/checkout@v3
          # git clone https://github.com/ayuj9/kjpanel-django.git
          # cd kjpanel-django

      # - name: setup
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y python3 python3-pip

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}


      - name: List bashScripts directory
        run: ls -la 

      - name: Make setup_django.sh executable
        run: chmod +x ./bashScripts/setup_django.sh

          

      - name: Setting django server
        run: bash ./bashScripts/setup_django.sh &

      - name: Waiting for Server to come up
        run: |
          for i in {1..30}; do
            if curl -s http://127.0.0.1:8000/ > /dev/null; then
              echo "Server is up"
              break
            fi
            echo "Waiting ..."
            sleep 10
          done

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: check server     
        run: |
             sleep 5 
             curl http://localhost:8080/health

      - name: test file
        run: source ./bashScripts/run_test.sh
